<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freewinxray.github.io/news/article-99871.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>python协程编程实例_Python异步IO编程之-asyncio协程应用例子</title>
        <meta name="description" content="前面，我们从大的结构上认识了最新的Python 3.7里面的asyncio标准库。接下来，我们就开始一点一点的来学习asyncio的使用。  一、安装 Python 3.7 我的系统是 Ubuntu " />
        <link rel="icon" href="/assets/website/img/freewinxray/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free WinXray节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freewinxray.github.io/news/article-99871.htm" />
    <meta property="og:site_name" content="Free WinXray节点订阅站" />
    <meta property="og:title" content="python协程编程实例_Python异步IO编程之-asyncio协程应用例子" />
    <meta property="og:image" content="https://freewinxray.github.io/uploads/20240729/92f470290be0785cbd9dc2f50f27c768.webp" />
        <meta property="og:release_date" content="2025-04-20T09:01:45" />
    <meta property="og:updated_time" content="2025-04-20T09:01:45" />
        <meta property="og:description" content="前面，我们从大的结构上认识了最新的Python 3.7里面的asyncio标准库。接下来，我们就开始一点一点的来学习asyncio的使用。  一、安装 Python 3.7 我的系统是 Ubuntu " />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="python协程编程实例_Python异步IO编程之-asyncio协程应用例子">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Roboto:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/js/frontend/freewinxray/aos/aos.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/freewinxray/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/freewinxray/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/freewinxray/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/freewinxray/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/freewinxray/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/freewinxray/style.css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-F73D4FMVSX"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-F73D4FMVSX');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="d-flex align-items-center">
        <div class="container d-flex align-items-center justify-content-between">
            <a href="/">
                        <span class="logo">Free WinXray</span>
                        </a>
            <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/client.htm">客户端</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                    </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- End Header -->
    <main id="main" data-aos="fade-up">
        <!-- ======= Breadcrumbs ======= -->
        <section class="breadcrumbs">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h1>python协程编程实例_Python异步IO编程之-asyncio协程应用例子</h1>
                    <ol>
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ol>
                </div>
            </div>
        </section><!-- End Breadcrumbs -->
        <section class="inner-page">
            <div class="container">
                <div class="row">
                    <div class="col-md-9 xcblog-blog-list">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                <div class="xcblog-blog-detail">
                      				  				  				<div id="content_views" class="htmledit_views"> <div style="font-size:16px;"> <p>前面，我们从大的结构上认识了最新的Python 3.7里面的asyncio标准库。接下来，我们就开始一点一点的来学习asyncio的使用。</p> <p align="center"><img decoding="async" src="" alt=""/></p> <p>一、安装 Python 3.7</p> <p>我的系统是 Ubuntu 16.04，里面有 Python 2.7 和 Python 3.6。2.7是系统自带的，其它系统软件对此有依赖，不能破坏。3.6 是通过ppa源apt install的，然后通过 virtualenvwrapper 管理虚拟环境。同样的，安装3.7也是用ppa源。</p> <p>sudo add-apt-repository ppa:deadsnakes/ppa</p> <p>sudo apt update</p> <p>sudo apt install python3.7 python3.7-dev</p> <p>安装python3.7-dev包的目的是编译C/C++模块时需要Python.h等头文件。安装好后，建立一个Python 3.7 的虚拟环境，就叫 py3.7 吧：</p> <p>mkvirtualenv -p python3.7 py3.7</p> <p>建立好虚拟环境，通过命令：workon py3.7 就可以使用 3.7 了。</p> <p>Windows 的安装可以移步猿人学网站，阅读《Python开发环境的安装配置》这篇文章，里面有详细说明。</p> <p>二、创建第一个协程</p> <p>Python 3.7 推荐使用 async/await 语法来声明协程，来编写异步应用程序。我们来创建第一个协程函数：首先打印一行“你好”，等待1秒钟后再打印“猿人学”。</p> <p align="center"><img decoding="async" src="" alt=""/></p> <p>sayhi()函数通过 async 声明为协程函数，较之前的修饰器声明更简洁明了。</p> <p>在实践过程中，什么功能的函数要用async声明为协程函数呢？就是那些能发挥异步IO性能的函数，比如读写文件、读写网络、读写数据库，这些都是浪费时间的IO操作，把它们协程化、异步化从而提高程序的整体效率(速度)。</p> <p>sayhi()函数是通过 asyncio.run()来运行的，而不是直接调用这个函数(协程)。因为，直接调用并不会把它加入调度日程，而只是简单的返回一个协程对象：</p> <p align="center"><img decoding="async" src="" alt=""/></p> <p>那么，如何真正运行一个协程呢？asyncio 提供了三种机制：</p> <p>(1)asyncio.run() 函数，这是异步程序的主入口，相当于C语言中的main函数。</p> <p>(2)用await等待协程，比如上例中的 await asyncio.sleep(1) 。再看下面的例子，我们定义了协程 say_delay() ，在main()协程中调用两次，第一次延迟1秒后打印“你好”，第二次延迟2秒后打印“猿人学”。这样我们通过 await 运行了两个协程。</p> <p align="center"><img decoding="async" src="" alt=""/></p> <p>从起止时间可以看出，两个协程是顺序执行的，总共耗时1+2=3秒。</p> <p>(3)通过 asyncio.create_task() 函数并发运行作为 asyncio 任务(Task) 的多个协程。下面，我们用create_task()来修改上面的main()协程，从而让两个say_delay()协程并发运行：</p> <p align="center"><img decoding="async" src="" alt=""/></p> <p>从运行结果的起止时间可以看出，两个协程是并发执行的了，总耗时等于最大耗时2秒。</p> <p>asyncio.create_task() 是一个很有用的函数，在爬虫中它可以帮助我们实现大量并发去下载网页。在Python 3.6中与它对应的是 ensure_future()。</p> <p>三、可等待对象(awaitables)</p> <p>可等待对象，就是可以在 await 表达式中使用的对象，前面我们已经接触了两种可等待对象的类型：协程和任务，还有一个是低层级的Future。</p> <p>asyncio模块的许多API都需要传入可等待对象，比如 run(), create_task() 等等。</p> <p>(1)协程</p> <p>协程是可等待对象，可以在其它协程中被等待。协程两个紧密相关的概念是：</p> <p>协程函数：通过 async def 定义的函数；</p> <p>协程对象：调用协程函数返回的对象。</p> <p align="center"><img decoding="async" src="" alt=""/></p> <p>运行上面这段程序，结果为：</p> <p>co is now is 1548512708.2026224</p> <p>now is 1548512708.202648</p> <p>可以看到，直接运行协程函数 whattime()得到的co是一个协程对象，因为协程对象是可等待的，所以通过 await 得到真正的当前时间。now2是直接await 协程函数，也得到了当前时间的返回值。</p> <p>(2)任务</p> <p>前面我们讲到，任务是用来调度协程的，以便并发执行协程。当一个协程通过 asyncio.create_task() 被打包为一个 任务，该协程将自动加入程序调度日程准备立即运行。</p> <p>create_task()的基本使用前面例子已经讲过。它返回的task通过await来等待其运行完。如果，我们不等待，会发生什么？“准备立即运行”又该如何理解呢？先看看下面这个例子：</p> <p align="center"><img decoding="async" src="" alt=""/></p> <p>运行这段代码的情况是这样的：</p> <p>首先，1秒钟后打印一行，这是第13，14行代码运行的结果：</p> <p>calling:0, now is 09:15:15</p> <p>接着，停顿1秒后，连续打印4行：</p> <p>calling:1, now is 09:15:16</p> <p>calling:2, now is 09:15:16</p> <p>calling:3, now is 09:15:16</p> <p>calling:4, now is 09:15:16</p> <p>从这个结果看，asyncio.create_task()产生的4个任务，我们并没有await，它们也执行了。关键在于第18行的 await，如果把这一行去掉或是sleep的时间小于1秒(比whattime()里面的sleep时间少即可)，就会只看到第一行的输出结果而看不到后面四行的输出。这是因为，main()不sleep或sleep少于1秒钟，main()就在whattime()还未来得及打印结果(因为，它要sleep1秒)就退出了，从而整个程序也退出了，就没有whattime()的输出结果。</p> <p>再来理解一下“准备立即执行”这个说法。它的意思就是，create_task()只是打包了协程并加入调度队列还未执行，并准备立即执行，什么时候执行呢？在“主协程”(调用create_task()的协程)挂起的时候，这里的“挂起”有两个方式：</p> <p>一是，通过 await task 来执行这个任务；</p> <p>另一个是，主协程通过 await sleep 挂起，事件循环就去执行task了。</p> <p>我们知道，asyncio是通过事件循环实现异步的。在主协程 main()里面，没有遇到 await 时，事件就是执行main()函数，遇到 await 时，事件循环就去执行别的协程，即create_task()生成的whattime()的4个任务，这些任务一开始就是 await sleep 1秒。这时候，主协程和4个任务协程都挂起了，CPU空闲，事件循环等待协程的消息。</p> <p>如果main()协程只sleep了0.1秒，它就先醒了，给事件循环发消息，事件循环就来继续执行main()协程，而main()后面已经没有代码，就退出该协程，退出它也就意味着整个程序退出，4个任务就没机会打印结果；</p> <p>如果main()协程sleep时间多余1秒，那么4个任务先唤醒，就会得到全部的打印结果；</p> <p>如果main()的18行sleep等于1秒时，和4个任务的sleep时间相同，也会得到全部打印结果。这是为什么呢？</p> <p>我猜想是这样的：4个任务生成在前，第18行的sleep在后，事件循环的消息响应可能有个先进先出的顺序。后面深入asyncio的代码专门研究一下这个猜想正确与否。</p> <p>(3)Future</p> <p>它是一个低层级的可等待对象，表示一个异步操作的最终结果。目前，我们写应用程序还用不到它，暂不学习。</p> <p>asyncio异步IO协程总结</p> <p>协程就是我们异步操作的片段。通常，写程序都会把全部功能分成很多不同功能的函数，目的是为了结构清晰；进一步，把那些涉及耗费时间的IO操作(读写文件、数据库、网络)的函数通过 async def 异步化，就是异步编程。</p> <p>那些异步函数(协程函数)都是通过消息机制被事件循环管理调度着，整个程序的执行是单线程的，但是某个协程A进行IO时，事件循环就去执行其它协程非IO的代码。当事件循环收到协程A结束IO的消息时，就又回来执行协程A，这样事件循环不断在协程之间转换，充分利用了IO的闲置时间，从而并发的进行多个IO操作，这就是异步IO。</p> <p>写异步IO程序时记住一个准则：需要IO的地方异步。其它地方即使用了协程函数也是没用的。</p> <p>网络爬虫就是异步IO的用武之地，接下来的文章，我们就来实现一个异步IO爬虫，敬请期待。</p> <p align="center"><img decoding="async" src="" alt=""/></p> <p>我的公众号：猿人学 Python 上会分享更多心得体会，敬请关注。</p> <p>***版权申明:若没有特殊说明，文章皆是猿人学 yuanrenxue.com 原创，没有猿人学授权，请勿以任何形式转载。***</p> </div> </div> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-99870.htm">Android项目封装一个登录页隐私协议弹窗工具包(一)</a></p>
                                        <p>下一个：<a href="/news/article-100628.htm">Golang错误处理机制（error 与 panic）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-94671.htm" title="宠物领养的英文单词（领养狗狗 英文）">宠物领养的英文单词（领养狗狗 英文）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-17-winxray-github.htm" title="「4月17日」最高速度21.1M/S，2025年WinXray每天更新免费节点订阅链接">「4月17日」最高速度21.1M/S，2025年WinXray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-19-winxray-node-github.htm" title="「4月19日」最高速度21.3M/S，2025年WinXray每天更新免费节点订阅链接">「4月19日」最高速度21.3M/S，2025年WinXray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-100629.htm" title="动物疫苗的了解和认识作文（动物疫苗知识）">动物疫苗的了解和认识作文（动物疫苗知识）</a></li>
                        <li class="py-2"><a href="/news/article-69416.htm" title="深圳宠物狗领养 深圳宠物狗领养网站">深圳宠物狗领养 深圳宠物狗领养网站</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-20-free-winxray-node.htm" title="「4月20日」最高速度21.7M/S，2025年WinXray每天更新免费节点订阅链接">「4月20日」最高速度21.7M/S，2025年WinXray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-74032.htm" title="IDEA部署Tomcat(超详细)">IDEA部署Tomcat(超详细)</a></li>
                        <li class="py-2"><a href="/news/article-80875.htm" title="合肥宠物领养中心在哪里啊 合肥宠物领养中心在哪里啊多少钱">合肥宠物领养中心在哪里啊 合肥宠物领养中心在哪里啊多少钱</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-10-free-node-subscribe.htm" title="「4月10日」最高速度19.9M/S，2025年WinXray每天更新免费节点订阅链接">「4月10日」最高速度19.9M/S，2025年WinXray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-8-free-high-speed-nodes.htm" title="「4月8日」最高速度19.3M/S，2025年WinXray每天更新免费节点订阅链接">「4月8日」最高速度19.3M/S，2025年WinXray每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">89</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container py-4">
            <div class="copyright">
                                    <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                Free WinXray节点订阅站 版权所有 Powered by WordPress
            </div>
        </div>
    </footer><!-- End Footer -->
    <div id="preloader"></div>
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/freewinxray/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/freewinxray/aos/aos.js"></script>
    <script src="/assets/website/js/frontend/freewinxray/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/freewinxray/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/freewinxray/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/freewinxray/purecounter/purecounter.js"></script>
    <script src="/assets/website/js/frontend/freewinxray/swiper/swiper-bundle.min.js"></script>
    <script src="/assets/website/js/frontend/freewinxray/waypoints/noframework.waypoints.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/freewinxray/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>